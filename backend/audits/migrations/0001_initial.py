# Generated by Django 5.0.14 on 2025-10-16 17:20

import datetime
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditChecklist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sequence_order', models.PositiveIntegerField(default=1)),
                ('question_text', models.TextField()),
                ('expected_evidence', models.TextField(help_text='What evidence should be present?')),
                ('audit_criteria', models.TextField(help_text='What to check against')),
                ('question_type', models.CharField(choices=[('YES_NO', 'Yes/No'), ('RATING', 'Rating (1-5)'), ('TEXT', 'Text Response'), ('NUMERIC', 'Numeric Value'), ('CONFORMITY', 'Conformity Assessment')], default='CONFORMITY', max_length=20)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('weight', models.PositiveIntegerField(default=1, help_text='Importance weight for scoring (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('custom_fields', models.JSONField(default=dict, help_text='Additional custom fields defined by user')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['audit_plan', 'sequence_order'],
            },
        ),
        migrations.CreateModel(
            name='AuditChecklistResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('response_value', models.JSONField(help_text='Flexible format for different question types')),
                ('conformity_status', models.CharField(choices=[('CONFORMING', 'Conforming'), ('MINOR_NC', 'Minor Non-Conformity'), ('MAJOR_NC', 'Major Non-Conformity'), ('OBSERVATION', 'Observation'), ('OPPORTUNITY', 'Opportunity for Improvement'), ('N_A', 'Not Applicable')], max_length=20)),
                ('evidence_description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('location_audited', models.CharField(blank=True, max_length=255)),
                ('response_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auditor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_responses', to=settings.AUTH_USER_MODEL)),
                ('checklist_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='audits.auditchecklist')),
                ('interviewed_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='interviews_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['checklist_item__sequence_order'],
            },
        ),
        migrations.CreateModel(
            name='AuditPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('audit_code', models.CharField(editable=False, max_length=50, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('audit_type', models.CharField(choices=[('INTERNAL', 'Internal Audit'), ('EXTERNAL', 'External Audit'), ('SURVEILLANCE', 'Surveillance Audit'), ('CERTIFICATION', 'Certification Audit'), ('RE_CERTIFICATION', 'Re-certification Audit')], default='INTERNAL', max_length=20)),
                ('scope_description', models.TextField(help_text='Detailed audit scope')),
                ('departments', models.JSONField(default=list, help_text='List of departments to audit')),
                ('processes', models.JSONField(default=list, help_text='List of processes to audit')),
                ('locations', models.JSONField(default=list, help_text='Physical locations to audit')),
                ('planned_start_date', models.DateField()),
                ('planned_end_date', models.DateField()),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('objectives', models.JSONField(default=list, help_text='List of audit objectives')),
                ('methodology', models.JSONField(default=dict, help_text='Audit methodology: interviews, document review, observations, etc.')),
                ('audit_criteria', models.TextField(help_text='Standards, regulations, procedures against which audit is conducted')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('REPORT_PENDING', 'Report Pending'), ('CLOSED', 'Closed')], default='DRAFT', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audits_approved', to=settings.AUTH_USER_MODEL)),
                ('audit_team', models.ManyToManyField(blank=True, related_name='audits_participated', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audits_created', to=settings.AUTH_USER_MODEL)),
                ('lead_auditor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audits_led', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'permissions': [('can_manage_audits', 'Can manage audit plans'), ('can_execute_audits', 'Can execute audits'), ('can_close_audits', 'Can close audits')],
            },
        ),
        migrations.CreateModel(
            name='AuditMeeting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('meeting_type', models.CharField(choices=[('OPENING', 'Opening Meeting'), ('CLOSING', 'Closing Meeting'), ('PROGRESS', 'Progress Meeting')], max_length=20)),
                ('meeting_date', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField(help_text='Meeting duration in minutes')),
                ('location', models.CharField(max_length=255)),
                ('agenda', models.JSONField(default=list, help_text='Meeting agenda items')),
                ('minutes', models.TextField(help_text='Meeting minutes/notes')),
                ('action_items', models.JSONField(default=list, help_text='Action items from meeting')),
                ('presentation_file', models.FileField(blank=True, null=True, upload_to='audit_meetings/')),
                ('minutes_file', models.FileField(blank=True, null=True, upload_to='audit_meetings/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attendees', models.ManyToManyField(related_name='audit_meetings_attended', to=settings.AUTH_USER_MODEL)),
                ('chairperson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_meetings_chaired', to=settings.AUTH_USER_MODEL)),
                ('audit_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='audits.auditplan')),
            ],
            options={
                'ordering': ['meeting_date'],
            },
        ),
        migrations.CreateModel(
            name='AuditFinding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('finding_code', models.CharField(editable=False, max_length=50, unique=True)),
                ('finding_type', models.CharField(choices=[('MAJOR_NC', 'Major Non-Conformity'), ('MINOR_NC', 'Minor Non-Conformity'), ('OBSERVATION', 'Observation'), ('OPPORTUNITY', 'Opportunity for Improvement')], max_length=20)),
                ('severity', models.CharField(choices=[('CRITICAL', 'Critical'), ('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(help_text='Detailed description of the finding')),
                ('root_cause_analysis', models.JSONField(default=dict, help_text='5-Why analysis, Fishbone diagram data, etc.')),
                ('impact_assessment', models.CharField(choices=[('SAFETY', 'Safety'), ('LEGAL', 'Legal/Compliance'), ('OPERATIONAL', 'Operational'), ('FINANCIAL', 'Financial'), ('REPUTATIONAL', 'Reputational')], help_text='Primary impact area', max_length=20)),
                ('risk_level', models.IntegerField(default=5, help_text='Risk level (1-10)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('department_affected', models.CharField(max_length=100)),
                ('process_affected', models.CharField(blank=True, max_length=255)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('identified_date', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('CAPA_ASSIGNED', 'CAPA Assigned'), ('IN_PROGRESS', 'In Progress'), ('PENDING_VERIFICATION', 'Pending Verification'), ('VERIFIED', 'Verified'), ('CLOSED', 'Closed')], default='OPEN', max_length=30)),
                ('requires_immediate_action', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('checklist_response', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='findings', to='audits.auditchecklistresponse')),
                ('identified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='findings_identified', to=settings.AUTH_USER_MODEL)),
                ('audit_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='audits.auditplan')),
            ],
            options={
                'ordering': ['-identified_date', '-severity'],
                'permissions': [('can_create_findings', 'Can create audit findings'), ('can_close_findings', 'Can close audit findings')],
            },
        ),
        migrations.AddField(
            model_name='auditchecklist',
            name='audit_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_items', to='audits.auditplan'),
        ),
        migrations.CreateModel(
            name='AuditReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_code', models.CharField(editable=False, max_length=50, unique=True)),
                ('executive_summary', models.TextField(help_text='High-level summary for management')),
                ('audit_scope_actual', models.TextField(help_text='Actual scope covered (may differ from planned)')),
                ('methodology_used', models.TextField()),
                ('key_findings_summary', models.JSONField(default=list, help_text='Summary of key findings')),
                ('strengths_identified', models.JSONField(default=list, help_text='Areas of strength identified during audit')),
                ('areas_for_improvement', models.JSONField(default=list, help_text='Areas needing improvement')),
                ('overall_conformity_score', models.DecimalField(decimal_places=2, help_text='Overall conformity score (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('conformity_by_clause', models.JSONField(default=dict, help_text='Conformity scores broken down by ISO clause')),
                ('major_ncs_count', models.PositiveIntegerField(default=0)),
                ('minor_ncs_count', models.PositiveIntegerField(default=0)),
                ('observations_count', models.PositiveIntegerField(default=0)),
                ('opportunities_count', models.PositiveIntegerField(default=0)),
                ('recommendations', models.TextField()),
                ('conclusion', models.TextField()),
                ('next_audit_recommendation_date', models.DateField(blank=True, help_text='Recommended date for next audit', null=True)),
                ('report_date', models.DateField(default=datetime.date.today)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted for Review'), ('REVIEWED', 'Reviewed'), ('APPROVED', 'Approved'), ('PUBLISHED', 'Published')], default='DRAFT', max_length=20)),
                ('pdf_report', models.FileField(blank=True, null=True, upload_to='audit_reports/%Y/%m/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_reports_approved', to=settings.AUTH_USER_MODEL)),
                ('audit_plan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='audits.auditplan')),
                ('prepared_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_reports_prepared', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_reports_reviewed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-report_date'],
            },
        ),
        migrations.CreateModel(
            name='CAPA',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_code', models.CharField(editable=False, max_length=50, unique=True)),
                ('action_type', models.CharField(choices=[('CORRECTIVE', 'Corrective Action'), ('PREVENTIVE', 'Preventive Action'), ('BOTH', 'Both Corrective & Preventive')], default='CORRECTIVE', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(help_text='Detailed action description')),
                ('root_cause', models.TextField(help_text='Root cause from finding')),
                ('action_plan', models.TextField(help_text='Step-by-step action plan')),
                ('assigned_date', models.DateField(auto_now_add=True)),
                ('acknowledged_date', models.DateField(blank=True, null=True)),
                ('target_completion_date', models.DateField()),
                ('actual_completion_date', models.DateField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('CRITICAL', 'Critical'), ('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default='MEDIUM', max_length=20)),
                ('status', models.CharField(choices=[('ASSIGNED', 'Assigned'), ('ACKNOWLEDGED', 'Acknowledged'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('PENDING_VERIFICATION', 'Pending Verification'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected'), ('CLOSED', 'Closed')], default='ASSIGNED', max_length=30)),
                ('resources_required', models.TextField(blank=True, help_text='Resources needed for implementation')),
                ('cost_estimate', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated cost of implementation', max_digits=12, null=True)),
                ('effectiveness_criteria', models.TextField(help_text='How will effectiveness be measured?')),
                ('verification_method', models.CharField(choices=[('RE_AUDIT', 'Re-audit'), ('INSPECTION', 'Inspection'), ('DOCUMENT_REVIEW', 'Document Review'), ('OBSERVATION', 'Observation'), ('INTERVIEW', 'Interview')], default='RE_AUDIT', max_length=100)),
                ('verification_date', models.DateField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('is_effective', models.BooleanField(blank=True, help_text='Was the CAPA effective?', null=True)),
                ('extension_requests', models.JSONField(default=list, help_text='History of extension requests and approvals')),
                ('progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('progress_notes', models.TextField(blank=True)),
                ('last_progress_update', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capas_assigned', to=settings.AUTH_USER_MODEL)),
                ('finding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capas', to='audits.auditfinding')),
                ('responsible_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capas_responsible', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capas_verified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CAPA',
                'verbose_name_plural': 'CAPAs',
                'ordering': ['target_completion_date', '-priority'],
            },
        ),
        migrations.CreateModel(
            name='AuditEvidence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='audit_evidence/%Y/%m/')),
                ('file_type', models.CharField(choices=[('PHOTO', 'Photo'), ('DOCUMENT', 'Document'), ('VIDEO', 'Video'), ('AUDIO', 'Audio Recording'), ('CHECKLIST', 'Completed Checklist'), ('OTHER', 'Other')], default='PHOTO', max_length=20)),
                ('file_size', models.PositiveIntegerField(editable=False, help_text='File size in bytes', null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_confidential', models.BooleanField(default=False)),
                ('tags', models.JSONField(default=list, help_text='Tags for categorization')),
                ('checklist_response', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidence', to='audits.auditchecklistresponse')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_evidence_uploaded', to=settings.AUTH_USER_MODEL)),
                ('finding', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidence', to='audits.auditfinding')),
                ('audit_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidence', to='audits.auditplan')),
                ('capa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidence', to='audits.capa')),
            ],
            options={
                'verbose_name': 'Audit Evidence',
                'verbose_name_plural': 'Audit Evidence',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_comments', to=settings.AUTH_USER_MODEL)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='audits.auditcomment')),
                ('finding', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='audits.auditfinding')),
                ('audit_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='audits.auditplan')),
                ('capa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='audits.capa')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CAPAProgressUpdate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('update_text', models.TextField()),
                ('progress_percentage', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('challenges_faced', models.TextField(blank=True)),
                ('next_steps', models.TextField(blank=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('capa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_updates', to='audits.capa')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capa_updates_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-update_date'],
            },
        ),
        migrations.CreateModel(
            name='ISOClause45001',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clause_number', models.CharField(help_text='e.g., 4.1, 8.1.2', max_length=10, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('requirements', models.JSONField(default=list, help_text='List of specific requirements for this clause')),
                ('is_mandatory', models.BooleanField(default=True)),
                ('risk_category', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
                ('guidance_notes', models.TextField(blank=True, help_text='Audit guidance for this clause')),
                ('parent_clause', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_clauses', to='audits.isoclause45001')),
            ],
            options={
                'verbose_name': 'ISO 45001:2018 Clause',
                'verbose_name_plural': 'ISO 45001:2018 Clauses',
                'ordering': ['clause_number'],
            },
        ),
        migrations.AddField(
            model_name='auditplan',
            name='iso_clauses',
            field=models.ManyToManyField(related_name='audits', to='audits.isoclause45001'),
        ),
        migrations.AddField(
            model_name='auditfinding',
            name='iso_clause',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='audits.isoclause45001'),
        ),
        migrations.AddField(
            model_name='auditchecklist',
            name='iso_clause',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_items', to='audits.isoclause45001'),
        ),
        migrations.AlterUniqueTogether(
            name='auditchecklist',
            unique_together={('audit_plan', 'sequence_order')},
        ),
    ]
