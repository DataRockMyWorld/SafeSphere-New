[pytest]
# Django settings
DJANGO_SETTINGS_MODULE = core.settings
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Test discovery
testpaths = 
    accounts
    documents
    ppes
    legals
    api

# Output options
addopts = 
    # Verbose output
    -v
    # Show extra test summary info
    -ra
    # Show local variables in tracebacks
    -l
    # Strict markers (fail on unknown markers)
    --strict-markers
    # Strict config (fail on config issues)
    --strict-config
    # Show warnings
    -W default
    # Coverage options
    --cov=.
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    # Parallel execution (use -n auto for auto-detect CPU count)
    # -n auto
    # Rerun failed tests (disabled to see all results)
    # --maxfail=5

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    security: marks tests as security tests
    load: marks tests as load/performance tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    models: marks tests as model tests
    permissions: marks tests as permission tests
    workflow: marks tests as workflow tests
    inventory: marks tests as inventory tests
    django_db: mark test to use database

# Coverage settings
[coverage:run]
source = .
omit = 
    */migrations/*
    */tests/*
    */test_*.py
    */__init__.py
    */admin.py
    */apps.py
    manage.py
    */settings*.py
    */wsgi.py
    */asgi.py
    */gunicorn.conf.py

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[coverage:html]
directory = htmlcov

